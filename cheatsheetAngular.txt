===================Angular=================

if statements:

		myFunc() {				
			if (Bool) {			<-- testet boolsche variable (Bool) oder eine Bedingung (a === b)
			return 'wahr';		<-- wenn wahr passiert dies
			} else {			<-- wenn nicht
			return 'falsch';	<-- das
			}
		}

Events und Buttons:

		<button (click)="myFunc()">				<-- Fürht bei Event (click) eine function aus (myFunc)
    		Text
  		</button>

ngModel:

		<input type="text" [(ngModel)]="VarInput">		<-- die Variable (VarInput) wird gleich dem Input string gesetzt 

	alternativ:

		<input type="text" (input)="onUpdate($event)">
	mit
		onUpdate(event: Event) {
    	this.variable = (<HTMLInputElement>event.target).value;
		}


Structural Directive: ngIf

		<p *ngIf="Bool; else Alt" >			<-- Testet boolsche Variable (Bool). Wenn nicht ...
			Bool ist wahr.
		</p>
		<ng-template #Alt>					<-- wird stattdessen (else) das Element (<ng-template> muss es sein) mit der referenzierten id (#Alt) angezeigt
			<p>Bool ist nicht wahr.</p>
		</ng-template>

Attribute Directive: ngStyle

		<p [ngStyle] = "{color: detColor(), backgroundColor: detColor()}"> 					<-- ngStyle kann variablen, func und methoden lesen und die werte dynamisch lesen.
			Text																			hier gibt die func detColor() eine farbe ('red' oder 'green') als string zurück.
		</p>																				Achte auf die Schreibweise backgroundColor statt background-color

Attribute Directive: ngClass

		<p [ngClass] = "{variable}"> 			<-- ngStyle kann variablen (variable), func und methoden lesen und die werte dynamisch lesen.
			Text																			
		</p>										Class wird addiert!

create a new app:
	
	            cmd in directory:	ng new "appname"
				npm install 
	
run new app:
				cd in new dir
				ng serve
				app runs in localhost:4200

get boostrap running:		cd in new dir
				            npm install --save bootstrap
				            add "../node_modules/bootstrap/dist/css/bootstrap.min.css", into ".angular-cli.json" in the "styles":{} part 


generate new component:
				            ng generate component "name"


================git==========================

file hinzufügen			        git add file.xyz 
alle files hinzufügen		    git add .
alle file eines typs hinzufügen	git add *.xyz
Commiten			            git commit -m "Dies wurde geändert"
remote (github) hinzufügen	    git remote add origin [url]
pushen zu remote		        git push -u origin master (muss beit github eingeloggt sein)
pullrequest			            git pull
git clone			            git clone [url]